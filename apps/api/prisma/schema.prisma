// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String       @id @default(cuid())
  email          String       @unique
  name           String?
  role           UserRole     @default(USER)
  avatarUrl      String?
  projects       Project[]
  orders         Order[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

model StoryTemplate {
  id             String        @id @default(cuid())
  title          String
  description    String?
  coverImageUrl  String
  layoutJson     Json           // stores structure of pages (placeholders, text areas)
  previewPages   Int            @default(2) // how many pages are shown before blur
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  projects       Project[]
}

model Project {
  id              String          @id @default(cuid())
  userId          String
  templateId      String
  title           String?
  status          ProjectStatus   @default(DRAFT)
  uploadedImages  UploadedImage[]
  generatedPages  Json?           // stores web-optimized preview data
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  user            User            @relation(fields: [userId], references: [id])
  template        StoryTemplate   @relation(fields: [templateId], references: [id])
  orders          Order[]
}

enum ProjectStatus {
  DRAFT
  COMPLETED
  PURCHASED
}

model UploadedImage {
  id         String   @id @default(cuid())
  projectId  String
  imageUrl   String
  cropData   Json?
  createdAt  DateTime @default(now())

  project    Project  @relation(fields: [projectId], references: [id])
}

model Order {
  id            String      @id @default(cuid())
  userId        String
  projectId     String
  stripeId      String      @unique
  amount        Int
  currency      String      @default("USD")
  status        OrderStatus @default(PENDING)
  trackingUrl   String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  user          User        @relation(fields: [userId], references: [id])
  project       Project     @relation(fields: [projectId], references: [id])
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}

model FAQ {
  id         String   @id @default(cuid())
  question   String
  answer     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Testimonial {
  id         String   @id @default(cuid())
  name       String
  message    String
  avatarUrl  String?
  createdAt  DateTime @default(now())
}

model BlogPost {
  id         String   @id @default(cuid())
  title      String
  slug       String   @unique
  content    String
  coverImage String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
